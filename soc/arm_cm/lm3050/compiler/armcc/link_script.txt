#! armcc -E

#define FLASH_BASE 0x800000
#define FLASH_BASE_APP 0x800300
#define FLASH_SIZE 0x80000
#define FLASH_END (FLASH_BASE + FLASH_SIZE)
#define RAM_BASE 0x20000000
#define RAM_SIZE 0x20000
#define RAM_END (RAM_BASE + RAM_SIZE)

LR_FLASH FLASH_BASE_APP FLASH_SIZE{
    VECTOR_CODE RAM_BASE{
        *(RESET, +First)
    }

    RAM_DATA_CODE 0x20000134 {
        *(.xip_banned.sleep_recover_asm,+First)
        *(+RW)
        *(.xip_banned*)
    }

    FLASH_CODE AlignExpr(FLASH_BASE_APP+ImageLength(RAM_DATA_CODE)+ImageLength(VECTOR_CODE),8) FIXED {
        *(InRoot$$Sections)
        .ANY(+RO)
    }
    ScatterAssert(ImageLimit(FLASH_CODE) <= FLASH_END)
    BSS AlignExpr(ImageLimit(RAM_DATA_CODE),8)
    {
        *(+ZI)
    }
    HEAP +0 UNINIT
    {
        *(HEAP)
    }
    STACK +0 UNINIT
    {
        *(STACK)
    }
    ScatterAssert(ImageLimit(STACK)<=RAM_END)
}

LR_INFO FLASH_BASE{
	INFO +0 {
        *(:gdef:__info_array,+First)
    }
}
