#ifndef REG_SYSC_SEC_PER_TYPE_H_
#define REG_SYSC_SEC_PER_TYPE_H_
#include <stdint.h>
#include "reg_base_addr.h"

#define SYSC_SEC_PER ((reg_sysc_sec_per_t *)SEC_SYSC_SEC_PER_ADDR)

typedef struct
{
    volatile uint32_t PD_PER_CLKG0; //0x0
    volatile uint32_t RESERVED_4; //0x4
    volatile uint32_t RESERVED_8; //0x8
    volatile uint32_t RESERVED_c; //0xc
    volatile uint32_t PD_PER_SRST0; //0x10
    volatile uint32_t RESERVED_14; //0x14
    volatile uint32_t RESERVED_18; //0x18
    volatile uint32_t RESERVED_1c; //0x1c
    volatile uint32_t RESERVED_20; //0x20
    volatile uint32_t RESERVED_24; //0x24
    volatile uint32_t RESERVED_28; //0x28
    volatile uint32_t RESERVED_2c; //0x2c
    volatile uint32_t RST_SRC; //0x30
    volatile uint32_t RESERVED_34; //0x34
    volatile uint32_t RESERVED_38; //0x38
    volatile uint32_t RESERVED_3c; //0x3c
    volatile uint32_t RESERVED_40; //0x40
    volatile uint32_t RESERVED_44; //0x44
    volatile uint32_t RESERVED_48; //0x48
    volatile uint32_t RESERVED_4c; //0x4c
#if 1
    volatile uint32_t IO_FUNC_LOCK[15];
#else
    volatile uint32_t FUNC_IOA_LOCK; //0x50
    volatile uint32_t FUNC_IOB_LOCK; //0x54
    volatile uint32_t FUNC_IOC_LOCK; //0x58
    volatile uint32_t FUNC_IOD_LOCK; //0x5c
    volatile uint32_t FUNC_IOE_LOCK; //0x60
    volatile uint32_t FUNC_IOF_LOCK; //0x64
    volatile uint32_t FUNC_IOG_LOCK; //0x68
    volatile uint32_t FUNC_IOH_LOCK; //0x6c
    volatile uint32_t FUNC_IOI_LOCK; //0x70
    volatile uint32_t FUNC_IOJ_LOCK; //0x74
    volatile uint32_t FUNC_IOK_LOCK; //0x78
    volatile uint32_t FUNC_IOM_LOCK; //0x7c
    volatile uint32_t FUNC_ION_LOCK; //0x80
    volatile uint32_t FUNC_IOQ_LOCK; //0x84
    volatile uint32_t FUNC_IOT_LOCK; //0x88
#endif
}reg_sysc_sec_per_t;

enum SYSC_SEC_PER_REG_PD_PER_CLKG0_FIELD
{
    SYSC_SEC_PER_CLKG_SET_I2C1_MASK = (int)0x1,
    SYSC_SEC_PER_CLKG_SET_I2C1_POS = 0,
    SYSC_SEC_PER_CLKG_CLR_I2C1_MASK = (int)0x2,
    SYSC_SEC_PER_CLKG_CLR_I2C1_POS = 1,
    SYSC_SEC_PER_CLKG_SET_I3C1_MASK = (int)0x10,
    SYSC_SEC_PER_CLKG_SET_I3C1_POS = 4,
    SYSC_SEC_PER_CLKG_CLR_I3C1_MASK = (int)0x20,
    SYSC_SEC_PER_CLKG_CLR_I3C1_POS = 5,
    SYSC_SEC_PER_CLKG_SET_UART1_MASK = (int)0x100,
    SYSC_SEC_PER_CLKG_SET_UART1_POS = 8,
    SYSC_SEC_PER_CLKG_CLR_UART1_MASK = (int)0x200,
    SYSC_SEC_PER_CLKG_CLR_UART1_POS = 9,
    SYSC_SEC_PER_CLKG_SET_IWDT1_MASK = (int)0x1000,
    SYSC_SEC_PER_CLKG_SET_IWDT1_POS = 12,
    SYSC_SEC_PER_CLKG_CLR_IWDT1_MASK = (int)0x2000,
    SYSC_SEC_PER_CLKG_CLR_IWDT1_POS = 13,
    SYSC_SEC_PER_CLKG_SET_WWDT1_MASK = (int)0x4000,
    SYSC_SEC_PER_CLKG_SET_WWDT1_POS = 14,
    SYSC_SEC_PER_CLKG_CLR_WWDT1_MASK = (int)0x8000,
    SYSC_SEC_PER_CLKG_CLR_WWDT1_POS = 15,
    SYSC_SEC_PER_CLKG_SET_TRNG_MASK = (int)0x10000,
    SYSC_SEC_PER_CLKG_SET_TRNG_POS = 16,
    SYSC_SEC_PER_CLKG_CLR_TRNG_MASK = (int)0x20000,
    SYSC_SEC_PER_CLKG_CLR_TRNG_POS = 17,
};

enum SYSC_SEC_PER_REG_PD_PER_SRST0_FIELD
{
    SYSC_SEC_PER_SRST_SET_I2C2_N_MASK = (int)0x1,
    SYSC_SEC_PER_SRST_SET_I2C2_N_POS = 0,
    SYSC_SEC_PER_SRST_CLR_I2C1_N_MASK = (int)0x2,
    SYSC_SEC_PER_SRST_CLR_I2C1_N_POS = 1,
    SYSC_SEC_PER_SRST_SET_I3C1_N_MASK = (int)0x10,
    SYSC_SEC_PER_SRST_SET_I3C1_N_POS = 4,
    SYSC_SEC_PER_SRST_CLR_I3C1_N_MASK = (int)0x20,
    SYSC_SEC_PER_SRST_CLR_I3C1_N_POS = 5,
    SYSC_SEC_PER_SRST_SET_UART1_N_MASK = (int)0x100,
    SYSC_SEC_PER_SRST_SET_UART1_N_POS = 8,
    SYSC_SEC_PER_SRST_CLR_UART1_N_MASK = (int)0x200,
    SYSC_SEC_PER_SRST_CLR_UART1_N_POS = 9,
    SYSC_SEC_PER_SRST_SET_IWDT1_N_MASK = (int)0x1000,
    SYSC_SEC_PER_SRST_SET_IWDT1_N_POS = 12,
    SYSC_SEC_PER_SRST_CLR_IWDT1_N_MASK = (int)0x2000,
    SYSC_SEC_PER_SRST_CLR_IWDT1_N_POS = 13,
    SYSC_SEC_PER_SRST_SET_WWDT1_N_MASK = (int)0x4000,
    SYSC_SEC_PER_SRST_SET_WWDT1_N_POS = 14,
    SYSC_SEC_PER_SRST_CLR_WWDT1_N_MASK = (int)0x8000,
    SYSC_SEC_PER_SRST_CLR_WWDT1_N_POS = 15,
    SYSC_SEC_PER_SRST_SET_TRNG_N_MASK = (int)0x10000,
    SYSC_SEC_PER_SRST_SET_TRNG_N_POS = 16,
    SYSC_SEC_PER_SRST_CLR_TRNG_N_MASK = (int)0x20000,
    SYSC_SEC_PER_SRST_CLR_TRNG_N_POS = 17,
};

enum SYSC_SEC_PER_REG_RST_SRC_SEC_FIELD {
    SYSC_SEC_PER_RST_SRC_CLR_MASK = (int)0x1,
    SYSC_SEC_PER_RST_SRC_CLR_POS = 0,
    SYSC_SEC_PER_RST_SRC_MASK = (int)0x70000,
    SYSC_SEC_PER_RST_FROM_IWDT1_MASK = (int)0x10000,
    SYSC_SEC_PER_RST_FROM_IWDT1_POS = 16,
    SYSC_SEC_PER_RST_FROM_WWDT1_MASK = (int)0x20000,
    SYSC_SEC_PER_RST_FROM_WWDT1_POS = 17,
    SYSC_SEC_PER_RST_FROM_SEC_CORE_SRST_MASK = (int)0x40000,
    SYSC_SEC_PER_RST_FROM_SEC_CORE_SRST_POS = 18,
};

enum SYSC_SEC_PER_REG_FUNC_IOA_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOA_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOA_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOB_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOB_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOB_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOC_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOC_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOC_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOD_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOD_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOD_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOE_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOE_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOE_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOF_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOF_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOF_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOG_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOG_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOG_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOH_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOH_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOH_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOI_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOI_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOI_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOJ_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOJ_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOJ_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOK_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOK_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOK_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOM_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOM_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOM_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_ION_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_ION_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_ION_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOQ_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOQ_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOQ_LOCK_POS = 0,
};

enum SYSC_SEC_PER_REG_FUNC_IOT_LOCK_FIELD
{
    SYSC_SEC_PER_FUNC_IOT_LOCK_MASK = (int)0xffff,
    SYSC_SEC_PER_FUNC_IOT_LOCK_POS = 0,
};

#endif

