#ifndef REG_I2C_TYPE_H_
#define REG_I2C_TYPE_H_
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef struct
{
    volatile uint32_t CR1;
    volatile uint16_t CR2_0_1;
    volatile uint8_t CR2_2;
    volatile uint8_t CR2_3;
    volatile uint32_t OAR1;
    volatile uint32_t OAR2;
    volatile uint32_t TIMINGR;
    volatile uint32_t TIMEOUTR;
    volatile uint32_t SR;
    volatile uint32_t CFR;
    volatile uint32_t PECR;
    volatile uint32_t RXDR;
    volatile uint32_t TXDR;
    volatile uint32_t IER;
    volatile uint32_t IDR;
    volatile uint32_t IVS;
    volatile uint32_t RIF;
    volatile uint32_t IFM;
    volatile uint32_t ICR;
}reg_i2c_t;

enum I2C_REG_CR1_FIELD
{
    I2C_CR1_PE_MASK = 0x1,
    I2C_CR1_PE_POS = 0,
    I2C_CR1_DNF_MASK = 0xF00,
    I2C_CR1_DNF_POS = 8,
    I2C_CR1_TXDMAEN_MASK = 0x4000,
    I2C_CR1_TXDMAEN_POS = 14,
    I2C_CR1_RXDMAEN_MASK = 0x8000,
    I2C_CR1_RXDMAEN_POS = 15,
    I2C_CR1_SBC_MASK = 0x10000,
    I2C_CR1_SBC_POS = 16,
    I2C_CR1_NOSTRETCH_MASK = 0x20000,
    I2C_CR1_NOSTRETCH_POS = 17,
    I2C_CR1_GCEN_MASK = 0x80000,
    I2C_CR1_GCEN_POS = 19,
    I2C_CR1_SMBHEN_MASK = 0x100000,
    I2C_CR1_SMBHEN_POS = 20,
    I2C_CR1_SMBDEN_MASK = 0x200000,
    I2C_CR1_MBDEN_POS = 21,
    I2C_CR1_ALERTEN_MASK = 0x400000,
    I2C_CR1_ALERTEN_POS = 22,
    I2C_CR1_PECEN_MASK = 0x800000,
    I2C_CR1_PECEN_POS = 23,
    I2C_CR1_TXFTH_MASK = 0x7000000,
    I2C_CR1_TXFTH_POS = 24,
    I2C_CR1_RXFTH_MASK = 0x70000000,
    I2C_CR1_RXFTH_POS = 28,
};

enum I2C_REG_CR2_0_1_FIELD
{
    I2C_CR2_SADD0_MASK = 0x1,
    I2C_CR2_SADD0_POS = 0,
    I2C_CR2_SADD1_7_MASK = 0xFE,
    I2C_CR2_SADD1_7_POS = 1,
    I2C_CR2_SADD8_9_MASK = 0x300,
    I2C_CR2_SADD8_9_POS = 8,
    I2C_CR2_RD_WEN_MASK = 0x400,
    I2C_CR2_RD_WEN_POS = 10,
    I2C_CR2_SADD10_MASK = 0x800,
    I2C_CR2_SADD10_POS = 11,
    I2C_CR2_HEAD10R_MASK = 0x1000,
    I2C_CR2_HEAD10R_POS = 12,
    I2C_CR2_START_MASK = 0x2000,
    I2C_CR2_START_POS = 13,
    I2C_CR2_STOP_MASK = 0x4000,
    I2C_CR2_STOP_POS = 14,
    I2C_CR2_NACK_MASK = 0x8000,
    I2C_CR2_NACK_POS = 15,
};

enum I2C_REG_CR2_2_FIELD
{
    I2C_CR2_NBYTES_MASK = 0xFF,
    I2C_CR2_NBYTES_POS = 0,
};

enum I2C_REG_CR2_3_FIELD
{
    I2C_CR2_RELOAD_MASK = 0x1,
    I2C_CR2_RELOAD_POS = 0, 
    I2C_CR2_AUTOEND_MASK = 0x2,
    I2C_CR2_AUTOEND_POS = 1,
    I2C_CR2_PECBYTE_MASK = 0x4,
    I2C_CR2_PECBYTE_POS = 2,
};

enum I2C_REG_OAR1_FIELD
{
    I2C_OAR1_OA10_MASK = 0x1,
    I2C_OAR1_OA10_POS = 0,
    I2C_OAR1_OA11_7_MASK = 0xFE,
    I2C_OAR1_OA11_7_POS = 1,
    I2C_OAR1_OA18_9_MASK = 0x300,
    I2C_OAR1_OA18_9_POS = 8,
    I2C_OAR1_OA1MODE_MASK = 0x400,
    I2C_OAR1_OA1MODE_POS = 10,
    I2C_OAR1_OA1EN_MASK = 0x8000,
    I2C_OAR1_OA1EN_POS = 15,
};
enum I2C_REG_OAR2_FIELD
{
    I2C_OAR2_OA21_7_MASK = 0xFE,
    I2C_OAR2_OA21_7_POS = 1,
    I2C_OAR2_OA2MSK_MASK = 0x700,
    I2C_OAR2_OA2MSK_POS = 8,
    I2C_OAR2_OA2EN_MASK = 0x8000,
    I2C_OAR2_OA2EN_POS = 15,
};
enum I2C_REG_TIMINGR_FIELD
{
    I2C_TIMINGR_SCLL_MASK = 0xFF,
    I2C_TIMINGR_SCLL_POS = 0,
    I2C_TIMINGR_SCLH_MASK = 0xFF00,
    I2C_TIMINGR_SCLH_POS = 8,
    I2C_TIMINGR_SDADEL_MASK = 0xF0000,
    I2C_TIMINGR_SDADEL_POS = 16,
    I2C_TIMINGR_SCLDEL_MASK = 0xF00000,
    I2C_TIMINGR_SCLDEL_POS = 20,
    I2C_TIMINGR_PRESC_MASK = (int)0xF0000000,
    I2C_TIMINGR_PRESC_POS = 28,
};
enum I2C_REG_TIMEOUTR_FIELD
{
    I2C_TIMEOUTR_TIMEOUTA_MASK = 0xFFF,
    I2C_TIMEOUTR_TIMEOUTA_POS = 0,
    I2C_TIMEOUTR_TIDLE_MASK = 0x1000,
    I2C_TIMEOUTR_TIDLE_POS = 12,
    I2C_TIMEOUTR_TIMEOUTEN_MASK = 0x8000,
    I2C_TIMEOUTR_TIMEOUTEN_POS = 15,
    I2C_TIMEOUTR_TIMEOUTB_MASK = 0xFFF0000,
    I2C_TIMEOUTR_TIMEOUTB_POS = 16,
    I2C_TIMEOUTR_TEXTEN_MASK = (int)0x80000000,
    I2C_TIMEOUTR_TEXTEN_POS = 31,
};
enum I2C_REG_SR_FIELD
{
    I2C_SR_TXE_MASK = 0x1,
    I2C_SR_TXE_POS = 0,
    I2C_SR_RXNE_MASK = 0x4,
    I2C_SR_RXNE_POS = 2,
    I2C_SR_ADDR_MASK = 0x8,
    I2C_SR_ADDR_POS = 3,
    I2C_SR_NACKF_MASK = 0x10,
    I2C_SR_NACKF_POS = 4,
    I2C_SR_STOPF_MASK = 0x20,
    I2C_SR_STOPF_POS = 5,
    I2C_SR_TC_MASK = 0x40,
    I2C_SR_TC_POS = 6,
    I2C_SR_TCR_MASK = 0x80,
    I2C_SR_TCR_POS = 7,
    I2C_SR_BERR_MASK = 0x100,
    I2C_SR_BERR_POS = 8,
    I2C_SR_ARLO_MASK = 0x200,
    I2C_SR_ARLO_POS = 9,
    I2C_SR_OVR_MASK = 0x400,
    I2C_SR_OVR_POS = 10,
    I2C_SR_PECERR_MASK = 0x800,
    I2C_SR_PECERR_POS = 11,
    I2C_SR_TIMEOUT_MASK = 0x1000,
    I2C_SR_TIMEOUT_POS = 12,
    I2C_SR_ALERT_MASK = 0x2000,
    I2C_SR_ALERT_POS = 13,
    I2C_SR_BUSY_MASK = 0x8000,
    I2C_SR_BUSY_POS = 15,
    I2C_SR_DIR_MASK = 0x10000,
    I2C_SR_DIR_POS = 16,
    I2C_SR_ADDCODE_MASK = 0xFE0000,
    I2C_SR_ADDCODE_POS = 17,    
    I2C_SR_TXFLV_MASK = 0xF000000,
    I2C_SR_TXFLV_POS = 24, 
    I2C_SR_RXFLV_MASK = (int)0xF0000000,
    I2C_SR_RXFLV_POS = 28,
};
enum I2C_REG_CFR_FIELD
{
    I2C_CFR_ADDRCF_MASK = 0x8,
    I2C_CFR_ADDRCF_POS = 3,
    I2C_CFR_NACKCF_MASK = 0x10,
    I2C_CFR_NACKCF_POS = 4,
    I2C_CFR_STOPCF_MASK = 0x20,
    I2C_CFR_STOPCF_POS = 5,
    I2C_CFR_BERRCF_MASK = 0x100,
    I2C_CFR_BERRCF_POS = 8,
    I2C_CFR_ARLOCF_MASK = 0x200,
    I2C_CFR_ARLOCF_POS = 9,
    I2C_CFR_OVRCF_MASK = 0x400,
    I2C_CFR_OVRCF_POS = 10,
    I2C_CFR_FECCF_MASK = 0x800,
    I2C_CFR_FECCF_POS = 11,
    I2C_CFR_TIMEOUTCF_MASK = 0x1000,
    I2C_CFR_TIMEOUTCF_POS = 12,
    I2C_CFR_ALERTCF_MASK = 0x2000,
    I2C_CFR_ALERTCF_POS = 13,	
};
enum I2C_REG_PECR_FIELD
{
    I2C_PECR_PEC_MASK = 0xFF,
    I2C_PECR_PEC_POS = 0,
};
enum I2C_REG_RXDR_FIELD
{
    I2C_RXDR_RXDATA_MASK = 0xFF,
    I2C_RXDR_RXDATA_POS = 0,
};
enum I2C_REG_TXDR_FIELD
{
    I2C_TXDR_TXDATA_MASK = 0xFF,
    I2C_TXDR_TXDATA_POS = 0,
};

enum I2C_REG_INT_FIELD
{
    I2C_INT_TXE_MASK = 0x1,
    I2C_INT_TXE_POS = 0,
    I2C_INT_RXNE_MASK = 0x4,
    I2C_INT_RXNE_POS = 2,
    I2C_INT_ADDR_MASK = 0x8,
    I2C_INT_ADDR_POS = 3,
    I2C_INT_NACK_MASK = 0x10,
    I2C_INT_NACK_POS = 4,
    I2C_INT_STOP_MASK = 0x20,
    I2C_INT_STOP_POS = 5,
    I2C_INT_TC_MASK = 0x40,
    I2C_INT_TC_POS = 6,
    I2C_INT_TCR_MASK = 0x80,
    I2C_INT_TCR_POS = 7,
    I2C_INT_BERR_MASK = 0x100,
    I2C_INT_BERR_POS = 8,
    I2C_INT_ARLO_MASK = 0x200,
    I2C_INT_ARLO_POS = 9,
    I2C_INT_OVR_MASK = 0x400,
    I2C_INT_OVR_POS = 10,
    I2C_INT_PECE_MASK = 0x800,
    I2C_INT_PECE_POS = 11,
    I2C_INT_TOUT_MASK = 0x1000,
    I2C_INT_TOUT_POS = 12,
    I2C_INT_ALERT_MASK = 0x2000,
    I2C_INT_ALERT_POS = 13,
};

#ifdef __cplusplus
}
#endif

#endif
